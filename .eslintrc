{
  "root": true,
  "plugins": ["@typescript-eslint"],
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": {
    "prefer-const": "off",
    "@typescript-eslint/prefer-const": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true
      }
    ],

    // Because of the number of type constraints we deal with that need to be
    // able to appear in both covariant and contravariant positions, it becomes
    // incredibly unwieldy to manage variants of each constraint with `never`
    // and `unknown` in all the right places
    "@typescript-eslint/no-explicit-any": "off"
  }
}
